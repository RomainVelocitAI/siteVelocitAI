name: Blog Automation - Publication automatique

on:
  # Déclenche tous les 2 jours à 9h00 UTC (11h00 heure française)
  schedule:
    - cron: '0 9 */2 * *'
  
  # Permet de déclencher manuellement le workflow
  workflow_dispatch:
    inputs:
      force_publish:
        description: 'Forcer la publication'
        required: false
        default: 'false'
        type: boolean

# Permissions nécessaires
permissions:
  contents: write

jobs:
  publish-blog-article:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        npm install --legacy-peer-deps
        npm install node-fetch@2

    - name: Verify environment
      run: |
        echo "Node version: $(node --version)"
        echo "Working directory: $(pwd)"
        ls -la scripts/

    - name: Run blog automation
      env:
        AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_API_KEY }}
        AIRTABLE_BASE_ID: ${{ secrets.AIRTABLE_BASE_ID }}
      run: |
        echo "Démarrage de l'automatisation blog..."
        node scripts/auto-publish-blog.js

    - name: Check for changes
      id: changes
      run: |
        if git diff --quiet && git diff --cached --quiet; then
          echo "changes=false" >> $GITHUB_OUTPUT
          echo "Aucun nouvel article à publier"
        else
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "Nouveaux changements détectés"
          git status
        fi

    - name: Commit and push changes
      if: steps.changes.outputs.changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "Blog Automation Bot"
        
        # Désactiver les hooks husky dans GitHub Actions
        export HUSKY=0
        
        # Ajouter les fichiers modifiés
        git add content/blog/
        git add pages/sitemap.xml.tsx || true
        
        # Créer un commit (sans hooks)
        ARTICLE_COUNT=$(git diff --cached --name-only content/blog/ | wc -l)
        if [ $ARTICLE_COUNT -gt 0 ]; then
          ARTICLE_NAME=$(git diff --cached --name-only content/blog/ | head -1 | xargs basename -s .md)
          git commit --no-verify -m "Publication automatique: $ARTICLE_NAME

          - Nouvel article publié depuis Airtable
          - Images récupérées depuis Airtable  
          - Prêt pour déploiement Netlify"
        else
          git commit --no-verify -m "Mise à jour automatique du blog"
        fi
        
        # Pousser les changements
        git push

    - name: Success notification
      if: steps.changes.outputs.changes == 'true'
      run: |
        echo "Article publié avec succès !"
        echo "Netlify va automatiquement déployer"
        echo "Prochain déclenchement dans 2 jours"

    - name: No changes notification
      if: steps.changes.outputs.changes == 'false'
      run: |
        echo "Aucun article programmé pour aujourd'hui"
        echo "Prochain déclenchement dans 2 jours"

    - name: Summary
      run: |
        echo "## Résumé de l'exécution" >> $GITHUB_STEP_SUMMARY
        echo "- **Date**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "- **Changements**: ${{ steps.changes.outputs.changes }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Prochain déclenchement**: Dans 2 jours à 11h00" >> $GITHUB_STEP_SUMMARY
