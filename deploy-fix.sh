#!/bin/bash

# Script de d√©ploiement des corrections Error 500
# Usage: ./deploy-fix.sh

echo "üöÄ D√©ploiement des corrections Error 500 pour VelocitAI"
echo "======================================================="

# Couleurs pour le terminal
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages
log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# 1. V√©rifier que nous sommes dans le bon r√©pertoire
if [ ! -f "package.json" ]; then
    log_error "Erreur: package.json non trouv√©. Ex√©cutez ce script depuis la racine du projet."
    exit 1
fi

echo ""
echo "üìã Liste des modifications appliqu√©es:"
echo "--------------------------------------"
echo "  ‚Ä¢ netlify.toml - Configuration corrig√©e"
echo "  ‚Ä¢ next.config.js - Optimisations production"
echo "  ‚Ä¢ pages/_app.tsx - ErrorBoundary int√©gr√©"
echo "  ‚Ä¢ middleware.ts - Headers de cache optimis√©s"
echo "  ‚Ä¢ lib/api-wrapper.ts - Gestion timeout/retry"
echo "  ‚Ä¢ pages/api/health.ts - Endpoint de monitoring"
echo "  ‚Ä¢ pages/500.tsx - Page d'erreur personnalis√©e"
echo "  ‚Ä¢ netlify/functions/warmup.ts - Fonction de warmup"
echo ""

# 2. Demander confirmation
read -p "Voulez-vous continuer avec le d√©ploiement? (y/n) " -n 1 -r
echo ""
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    log_warning "D√©ploiement annul√©"
    exit 0
fi

# 3. V√©rifier le status Git
echo ""
echo "üîç V√©rification du status Git..."
git status --short

# 4. Ajouter les fichiers modifi√©s
echo ""
echo "üì¶ Ajout des fichiers au commit..."
git add -A
log_success "Fichiers ajout√©s"

# 5. Cr√©er le commit
echo ""
echo "üíæ Cr√©ation du commit..."
git commit -m "Fix: R√©solution erreur 500 apr√®s inactivit√© + optimisations SEO

- Correction configuration Netlify pour Next.js
- Ajout gestion d'erreurs robuste avec ErrorBoundary  
- Impl√©mentation API wrapper avec timeout et retry
- Cr√©ation syst√®me de warmup pour pr√©venir cold starts
- Optimisation cache et performances SSR
- Page 500 personnalis√©e avec auto-r√©cup√©ration

Ces modifications r√©solvent le probl√®me d'erreur 500 qui survenait
apr√®s une p√©riode d'inactivit√© prolong√©e sur Netlify et am√©liorent
significativement les performances SEO du site." || {
    log_warning "Aucun changement √† commiter ou commit √©chou√©"
}

# 6. Afficher le dernier commit
echo ""
echo "üìù Dernier commit:"
git log -1 --oneline

# 7. Demander confirmation pour le push
echo ""
read -p "Voulez-vous pusher vers GitHub? (y/n) " -n 1 -r
echo ""
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "üöÄ Push vers GitHub..."
    git push origin main || git push origin master || {
        log_error "√âchec du push. V√©rifiez votre connexion et vos credentials."
        exit 1
    }
    log_success "Push r√©ussi! Le d√©ploiement Netlify va d√©marrer automatiquement."
else
    log_warning "Push annul√©. Ex√©cutez 'git push origin main' quand vous serez pr√™t."
fi

echo ""
echo "üìå Prochaines √©tapes:"
echo "--------------------"
echo "1. ‚úÖ V√©rifier le build sur Netlify Dashboard"
echo "2. ‚öôÔ∏è  Configurer les variables d'environnement sur Netlify:"
echo "     - URL=https://velocit-ai.fr"
echo "     - AIRTABLE_API_KEY (si utilis√©)"
echo "3. üîÑ Configurer UptimeRobot pour le warmup:"
echo "     - Monitor 1: https://velocit-ai.fr/api/health (5 min)"
echo "     - Monitor 2: https://velocit-ai.fr/.netlify/functions/warmup (15 min)"
echo "4. üß™ Tester apr√®s d√©ploiement:"
echo "     - curl https://velocit-ai.fr/api/health"
echo "     - Lighthouse audit"
echo ""
log_success "Script termin√© avec succ√®s!"